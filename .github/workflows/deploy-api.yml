name: Deploy API

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'apps/api/**/*'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Delete huge unnecessary tools folder
        run: rm -rf /opt/hostedtoolcache

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(git describe --tags --always)

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: callmewhy
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          target: api-prod
          tags: |
            callmewhy/openauth-api:${{ steps.get_version.outputs.VERSION }}
            callmewhy/openauth-api:latest

      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          target: queue-prod
          tags: |
            callmewhy/openauth-queue:${{ steps.get_version.outputs.VERSION }}
            callmewhy/openauth-queue:latest

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: rsync deployments
        uses: burnett01/rsync-deployments@4.1
        with:
          switches: -avzr --delete
          path: ./
          remote_path: /data/openauth-api
          remote_host: 20.212.6.4
          remote_port: 2222
          remote_user: why
          remote_key: ${{ secrets.DEPLOY_KEY }}
      - name: Executing remote ssh commands
        uses: appleboy/ssh-action@master
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          WALLET_SEED_SALT: ${{ secrets.WALLET_SEED_SALT }}
          JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
          AWS_SECRET: ${{ secrets.AWS_SECRET }}
        with:
          envs: DATABASE_URL,WALLET_SEED_SALT,JWT_PRIVATE_KEY,AWS_SECRET
          host: 20.212.6.4
          port: 2222
          username: why
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd /data/openauth-api
            docker compose -f docker-compose.yml pull
            docker compose -f docker-compose.yml up -d --no-deps --build
            docker exec openauth-api npx dotenv-cli -e .env.production -- prisma migrate deploy
